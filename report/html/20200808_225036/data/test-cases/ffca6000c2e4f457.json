{
  "uid" : "ffca6000c2e4f457",
  "name" : "无条件查询",
  "fullName" : "cases.test_geteventlist#test_geteventlist01",
  "historyId" : "d08f7e1daf8bae270356a158d0d66807",
  "time" : {
    "start" : 1596898237550,
    "stop" : 1596898237551,
    "duration" : 1
  },
  "description" : "\n    查询所有活动\n    ",
  "descriptionHtml" : "<pre><code>查询所有活动\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "requests.exceptions.MissingSchema: Invalid URL 'get_eventlist/': No schema supplied. Perhaps you meant http://get_eventlist/?",
  "statusTrace" : "get = <function get.<locals>.__get at 0x0492E658>\nset = <function set.<locals>.__set at 0x0492EDF0>\n\n    @feature('查询活动列表接口')\n    @title('无条件查询')\n    @order(order=2)\n    def test_geteventlist01(get, set):\n        '''\n        查询所有活动\n        '''\n        client = Client(url='get_eventlist/', method=METHOD.GET, body_type=BODY_TYPE.FORM,\n                        params={\"rstr\": get('rstr')})\n        client.set_header(\"uid\", get('uid'))\n        client.set_header(\"key\", get('key'))\n>       client.send()\n\ncases\\test_geteventlist.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncore\\client.py:45: in send\n    self.res = requests.get(url=self.url, headers=self.headers,\nC:\\Users\\wml\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\requests\\api.py:76: in get\n    return request('get', url, params=params, **kwargs)\nC:\\Users\\wml\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\requests\\api.py:61: in request\n    return session.request(method=method, url=url, **kwargs)\nC:\\Users\\wml\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\requests\\sessions.py:516: in request\n    prep = self.prepare_request(req)\nC:\\Users\\wml\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\requests\\sessions.py:449: in prepare_request\n    p.prepare(\nC:\\Users\\wml\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\requests\\models.py:314: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PreparedRequest [GET]>, url = 'get_eventlist/'\nparams = OrderedDict([('rstr', '123')])\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode('utf8')\n        else:\n            url = unicode(url) if is_py2 else str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if ':' in url and not url.lower().startswith('http'):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n            error = (\"Invalid URL {0!r}: No schema supplied. Perhaps you meant http://{0}?\")\n            error = error.format(to_native_string(url, 'utf8'))\n    \n>           raise MissingSchema(error)\nE           requests.exceptions.MissingSchema: Invalid URL 'get_eventlist/': No schema supplied. Perhaps you meant http://get_eventlist/?\n\nC:\\Users\\wml\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\requests\\models.py:388: MissingSchema",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "set",
    "time" : {
      "start" : 1596898237550,
      "stop" : 1596898237550,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "get",
    "time" : {
      "start" : 1596898237550,
      "stop" : 1596898237550,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "\n    查询所有活动\n    ",
    "status" : "broken",
    "statusMessage" : "requests.exceptions.MissingSchema: Invalid URL 'get_eventlist/': No schema supplied. Perhaps you meant http://get_eventlist/?",
    "statusTrace" : "get = <function get.<locals>.__get at 0x0492E658>\nset = <function set.<locals>.__set at 0x0492EDF0>\n\n    @feature('查询活动列表接口')\n    @title('无条件查询')\n    @order(order=2)\n    def test_geteventlist01(get, set):\n        '''\n        查询所有活动\n        '''\n        client = Client(url='get_eventlist/', method=METHOD.GET, body_type=BODY_TYPE.FORM,\n                        params={\"rstr\": get('rstr')})\n        client.set_header(\"uid\", get('uid'))\n        client.set_header(\"key\", get('key'))\n>       client.send()\n\ncases\\test_geteventlist.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncore\\client.py:45: in send\n    self.res = requests.get(url=self.url, headers=self.headers,\nC:\\Users\\wml\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\requests\\api.py:76: in get\n    return request('get', url, params=params, **kwargs)\nC:\\Users\\wml\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\requests\\api.py:61: in request\n    return session.request(method=method, url=url, **kwargs)\nC:\\Users\\wml\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\requests\\sessions.py:516: in request\n    prep = self.prepare_request(req)\nC:\\Users\\wml\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\requests\\sessions.py:449: in prepare_request\n    p.prepare(\nC:\\Users\\wml\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\requests\\models.py:314: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PreparedRequest [GET]>, url = 'get_eventlist/'\nparams = OrderedDict([('rstr', '123')])\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode('utf8')\n        else:\n            url = unicode(url) if is_py2 else str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if ':' in url and not url.lower().startswith('http'):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n            error = (\"Invalid URL {0!r}: No schema supplied. Perhaps you meant http://{0}?\")\n            error = error.format(to_native_string(url, 'utf8'))\n    \n>           raise MissingSchema(error)\nE           requests.exceptions.MissingSchema: Invalid URL 'get_eventlist/': No schema supplied. Perhaps you meant http://get_eventlist/?\n\nC:\\Users\\wml\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\requests\\models.py:388: MissingSchema",
    "steps" : [ {
      "name" : "接口详细信息:",
      "time" : {
        "start" : 1596898237550,
        "stop" : 1596898237551,
        "duration" : 1
      },
      "status" : "broken",
      "statusMessage" : "requests.exceptions.MissingSchema: Invalid URL 'get_eventlist/': No schema supplied. Perhaps you meant http://get_eventlist/?\n",
      "statusTrace" : "  File \"C:\\Users\\wml\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\allure_commons\\_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"E:\\python_project\\Fill\\core\\client.py\", line 45, in send\n    self.res = requests.get(url=self.url, headers=self.headers,\n  File \"C:\\Users\\wml\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\requests\\api.py\", line 76, in get\n    return request('get', url, params=params, **kwargs)\n  File \"C:\\Users\\wml\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\requests\\api.py\", line 61, in request\n    return session.request(method=method, url=url, **kwargs)\n  File \"C:\\Users\\wml\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\requests\\sessions.py\", line 516, in request\n    prep = self.prepare_request(req)\n  File \"C:\\Users\\wml\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\requests\\sessions.py\", line 449, in prepare_request\n    p.prepare(\n  File \"C:\\Users\\wml\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\requests\\models.py\", line 314, in prepare\n    self.prepare_url(url, params)\n  File \"C:\\Users\\wml\\AppData\\Local\\Programs\\Python\\Python38-32\\lib\\site-packages\\requests\\models.py\", line 388, in prepare_url\n    raise MissingSchema(error)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "hasContent" : true,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "查询活动列表接口"
  }, {
    "name" : "tag",
    "value" : "run(order=2)"
  }, {
    "name" : "parentSuite",
    "value" : "cases"
  }, {
    "name" : "suite",
    "value" : "test_geteventlist"
  }, {
    "name" : "host",
    "value" : "DESKTOP-E438EIT"
  }, {
    "name" : "thread",
    "value" : "14032-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "cases.test_geteventlist"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "run(order=2)" ]
  },
  "source" : "ffca6000c2e4f457.json",
  "parameterValues" : [ ]
}